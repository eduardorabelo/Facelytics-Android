{"name":"Facelytics-android","tagline":"","body":"# Facelytics\r\n\r\nFacelytics is an SDK allowing mobile apps to detect face criterias of people by analyzing the front video feed in realtime. Facelytics is able to track multiple faces and then detect gender, some emotions, age range and accessories, for each detected face. For more [informations](http://face-lytics.com). You can download a sample application on the [Google Play Store](https://play.google.com/store/apps/details?id=com.wassa.whatsthatface.demo) to see usage exemples for the sdk\r\n\r\n## Installation\r\n\r\n1. Download the [latest code version](https://github.com/wassafr/Facelytics-Android/archive/master.zip).\r\n2. Drag and drop the **armeabi-v7a** directory from the archive in your project navigator under **libs**.\r\n3. Drag and drop the **wassa** directory from the archive in your project navigator under **assets**.\r\n4. Drag and drop the **wassa-facelytics-(version).jar** from the archive in your project navigator under **libs** and include it in built-path.\r\n\r\n## Usage\r\n\r\nTo run the example project, clone the repo.\r\n\r\nMake sure you also see :\r\n- [Facelytics documentation](http://wassafr.github.io/Facelytics-Android/wassa-facelytics-jdoc/).\r\n- [Facelytics Sample - Eclipse](https://github.com/wassafr/Facelytics-Android/tree/master/sample/Sample-Eclipse/).\r\n- [Facelytics Sample - Android Studio](https://github.com/wassafr/Facelytics-Android/tree/master/sample/Sample-AndroidStudio/).\r\n\r\n###Basics\r\n1. Add the following code to your **AndroidManifest.xml** \r\n\r\n\t```xml\r\n\t\r\n\t\t<uses-permission\r\n\t        android:name=\"android.permission.CAMERA\"\r\n\t        android:required=\"true\" />\r\n\t    <uses-permission\r\n\t        android:name=\"android.permission.READ_EXTERNAL_STORAGE\"\r\n\t        android:required=\"false\" />\r\n\t    <uses-permission\r\n\t        android:name=\"android.permission.INTERNET\"\r\n\t        android:required=\"false\" />\r\n\t    <uses-permission\r\n\t        android:name=\"android.permission.ACCESS_NETWORK_STATE\"\r\n\t        android:required=\"false\" />\r\n\t\r\n\t    <uses-feature\r\n\t        android:name=\"android.hardware.camera\"\r\n\t        android:required=\"true\" />\r\n\t    <uses-feature\r\n\t        android:name=\"android.hardware.camera.autofocus\"\r\n\t        android:required=\"false\" />\r\n\t    <uses-feature\r\n\t        android:name=\"android.hardware.camera.front\"\r\n\t        android:required=\"false\" />\r\n\t    <uses-feature\r\n\t        android:name=\"android.hardware.camera.front.autofocus\"\r\n\t        android:required=\"false\" />\r\n\t        \r\n    ```\r\n\r\n\r\n2. Plugin and files loading - Add the following line to your **Application.java** or **MainActiviy.java** , onCreate()\r\n\r\n    ```java\r\n    \r\n        FacelyticsUtils.loadPlugin(this);\r\n        \r\n    ```\r\n\r\n3. Render - Add the following line to your **layout_activity.xml**\r\n\r\n    ```xml\r\n    \r\n        <com.wassa.noyau.capture.input.KFrameRender\r\n            android:id=\"@+id/render\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" />\r\n            \r\n    ```\r\n    \r\n4. Allow \"Keep Screen ON\" - Add the following line to your onCreate.\r\n\r\n    ```java\r\n    \r\n\t\t// this.setContentView(your_layout_activity.xml);\r\n\t\tthis.getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\r\n\t\t\r\n    ```\r\n\r\n5. Setup your first Facelytics service - Add the following code to your onResume()\r\n\r\n    ```java\r\n    \r\n        if (!FacelyticsUtils.isInit()) \r\n        {\r\n        \tFacelyticsCameraServiceNative newService = (FacelyticsCameraServiceNative) FacelyticsUtils.createInstance(\r\n\t\t\t\tnew FacelyticsCameraServiceNative(<context>, <config_file>, <licence_key>));\r\n            newService.setRenderToMat(true);\r\n            newService.load(KInputCamId.CAMERA_ID_FRONT);\r\n        }\r\n        \r\n    ```\r\n    ```java\r\n    \r\n        final FacelyticsCameraServiceNative service = (FacelyticsCameraServiceNative) FacelyticsUtils.getInstance();\r\n        \r\n    ```\r\n    ```java\r\n    \r\n        service.addOnEventListener(nnew OnFaceListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onEvent(String rawEvent) throws JSONException {\r\n\t\t\t\tsuper.onEvent(rawEvent);\r\n\t\t\t\t// Do something...\r\n\t\t\t\t\r\n\t\t\t\t// #1 - Retrieve basis information\r\n\t\t\t\t// getEvent().getTimestamp() <-- Timestamp event\r\n\t\t\t\t// getEvent().getFrameWidth() <-- captured frame width\r\n\t\t\t\t// getEvent().getFrameHeight() <-- captured frame width\r\n\t\t\t\t// getEvent().getFDetectTime() <-- Time to process a simple face detection\r\n\t\t\t\t// getEvent().getFDetectNextTick() <-- Time to wait before the next face detection\r\n\t\t\t\t// getEvent().getFDetectByPassed() <-- Amount of face detect thread by passed\r\n\t\t\t\t\r\n\t\t\t\t// #2 - More information available with FacelyticsFaceEvent\r\n\t\t\t\t// FacelyticsFaceEvent faceEvent = (FacelyticsFaceEvent) getEvent();\r\n\t\t\t\t\r\n\t\t\t\t// #3 - Retrieve basis face information\r\n\t\t\t\t// faceEvent.getFacesCount() <-- Detected faces count\r\n\t\t\t\t// faceEvent.getFace(_index) <-- Return a Face object at specified index\r\n\t\t\t\t// faceEvent.getFaceId(_index) <-- Return id of a face at specified index\r\n\t\t\t\t// faceEvent.getFaces(); <-- Return an array of detected faces\r\n\t\t\t\t\r\n\t\t\t\t// #4 - Retrieve advanced face information at specified index\r\n\t\t\t\t// faceEvent.getPosition(_index)\r\n\t\t\t\t// Eyes eyes = faceEvent.getEyes(_index)\r\n\t\t\t\t// Age age = faceEvent.getAge(_index)\r\n\t\t\t\t// Emotion emotion = faceEvent.getEmotion(_index)\r\n\t\t\t\t// Gender gender = faceEvent.getGender(_index)\r\n\t\t\t\t// Glass glass = faceEvent.getGlass(_index)\r\n\t\t\t\t// Motion motion = faceEvent.getMotion(_index)\r\n\t\t\t}\r\n\t\t});\r\n        \r\n    ```\r\n\r\n6. Start the record and the preview\r\n\r\n    ```java\r\n    \r\n        service.record(MyActivity.this, (KFrameRender) findViewById(R.id.render), true, true);\r\n        \r\n    ```\r\n\r\n## Requirements\r\n\r\n* Eclipse 4.3+\r\n* Android SDK 14+\r\n* armeabi-v7a\r\n\r\n## License\r\n\r\nFacelytics is available under a commercial license. See the LICENSE file for more info.\r\n\r\n## Author\r\n\r\nWassa, contact@wassa.fr","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}